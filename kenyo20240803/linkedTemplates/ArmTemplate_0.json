{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "kenyo20240803"
		},
		"ADLS_Link_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_Link'"
		},
		"Like_azure_SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Like_azure_SQL'"
		},
		"Link OnPrem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Link OnPrem'"
		},
		"ADLS_Link_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kenyo20240803.dfs.core.windows.net/"
		},
		"Like_azure_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "kenyo20240803.database.windows.net"
		},
		"Like_azure_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "kenyo20240803"
		},
		"Like_azure_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "emmanuel"
		},
		"Link OnPrem_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "EMMANUEL\\EMMAMDX"
		},
		"Link OnPrem_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "TescaOLTP"
		},
		"Link OnPrem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Tesca"
		},
		"Load Dimensional Data_properties_DL_to_EDW_parameters_folder": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"Load Dimensional Data_properties_DL_to_EDW_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"Load Dimensional Data_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/b28c3f0b-9bc9-4ace-b8f5-e04d014dde42/resourceGroups/rg-emmanuel/providers/Microsoft.Storage/storageAccounts/kenyo20240803"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Link')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_Link_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_Link_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Like_azure_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Like_azure_SQL_properties_typeProperties_server')]",
					"database": "[parameters('Like_azure_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Like_azure_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Like_azure_SQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DL_to_EDW_Dimension_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID",
						"type": "String"
					},
					{
						"name": "CityName",
						"type": "String"
					},
					{
						"name": "StateID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dimesional_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().TableName, '_', formatDateTime(addDays(utcNow(), -1), 'yyyy-MM-dd'), '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('live', '/', dataset().TableName)",
							"type": "Expression"
						},
						"fileSystem": "dimension"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID",
						"type": "String"
					},
					{
						"name": "CityName",
						"type": "String"
					},
					{
						"name": "StateID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fact_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().TableName, '_', formatDateTime(addDays(utcNow(), -1), 'yyyy-MM-dd'), '.snappy.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('live', '/', dataset().TableName)",
							"type": "Expression"
						},
						"fileSystem": "fact"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_MetaData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Like_azure_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceTableName",
						"type": "varchar"
					},
					{
						"name": "StagingTableName",
						"type": "varchar"
					},
					{
						"name": "MigrationSPROC",
						"type": "nvarchar"
					},
					{
						"name": "LoadIntoStaging",
						"type": "bit"
					},
					{
						"name": "LoadIntoDBO",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "GetMetaData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Like_azure_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Staging_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Like_azure_SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Like_azure_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Link OnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('Link OnPrem_properties_typeProperties_server')]",
					"database": "[parameters('Link OnPrem_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('Link OnPrem_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Link OnPrem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR3",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DL_to_EDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup MetaData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Integration].[GetMetaDataTriggerPath]",
								"storedProcedureParameters": {
									"triggerPath": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.folder",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Get_MetaData",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LoadIntoStaging",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Lookup MetaData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(activity('Lookup MetaData').output.firstRow.LoadIntoStaging,substring(pipeline().parameters.folder,0,indexof(pipeline().parameters.folder,'/')),'')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "dimension",
									"activities": [
										{
											"name": "Copy dimension data",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"additionalColumns": [
														{
															"name": "Lineage",
															"value": {
																"value": "@concat(pipeline().parameters.folder, '/', pipeline().parameters.fileName)",
																"type": "Expression"
															}
														}
													],
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "AzureSqlSink",
													"writeBehavior": "insert",
													"sqlWriterUseTableLock": false
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DL_to_EDW_Dimension_Data",
													"type": "DatasetReference",
													"parameters": {
														"folder": {
															"value": "@pipeline().parameters.folder",
															"type": "Expression"
														},
														"fileName": {
															"value": "@pipeline().parameters.fileName",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "Staging_DB",
													"type": "DatasetReference",
													"parameters": {
														"Schema": "Staging",
														"TableName": {
															"value": "@activity('Lookup MetaData').output.firstRow.StagingTableName",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					},
					{
						"name": "Load Into EDW",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LoadIntoStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Lookup MetaData').output.firstRow.LoadIntoDBO",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Stored procedure-Staging to EDW",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[Integration].[staging_to_db]",
										"storedProcedureParameters": {
											"dataset": {
												"value": {
													"value": "@activity('Lookup MetaData').output.firstRow.StagingTableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"lineage": {
												"value": {
													"value": "@concat(pipeline().parameters.folder, '/', pipeline().parameters.fileName)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Like_azure_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Get_MetaData')]",
				"[concat(variables('factoryId'), '/linkedServices/Like_azure_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DL_to_EDW_Dimension_Data')]",
				"[concat(variables('factoryId'), '/datasets/Staging_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_Dimensional_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link OnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link OnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_Fact_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link OnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link OnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Dimension_Tables_from_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup-OnPrem Dimension Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \n    s.name AS SchemaName,\n    t.name AS TableName\nFROM \n    TescaOLTP.sys.tables t\nINNER JOIN \n    TescaOLTP.sys.schemas s\nON \n    t.schema_id = s.schema_id\nWHERE \n    t.name != 'PurchaseTransaction'\n\tAND t.name != 'SalesTransaction'\n\tAND t.name != 'sysdiagrams'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OnPrem_Dimensional_Dataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Dimension Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup-OnPrem Dimension Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup-OnPrem Dimension Tables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Dimension Tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat('SELECT * FROM ', item().schemaName, '.', item().TableName)}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OnPrem_Dimensional_Dataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Dimesional_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnPrem_Dimensional_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/Dimesional_Dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Fact_Tables_from_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup-OnPrem Fact Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \n    s.name AS SchemaName,\n    t.name AS TableName\nFROM \n    sys.tables t\nINNER JOIN \n    sys.schemas s\nON \n    t.schema_id = s.schema_id\nWHERE \n    (t.name = 'PurchaseTransaction' AND EXISTS (\n            SELECT 1 \n            FROM PurchaseTransaction pt \n            WHERE t.object_id = OBJECT_ID('PurchaseTransaction')\n              AND CONVERT(DATE, pt.TransDate) <= DATEADD(day, -1, CONVERT(DATE, GETDATE()))\n    )) \n    OR \n    (t.name = 'SalesTransaction' AND EXISTS (\n            SELECT 1 \n            FROM SalesTransaction st \n            WHERE t.object_id = OBJECT_ID('SalesTransaction')\n              AND CONVERT(DATE, st.TransDate) <= DATEADD(day, -1, CONVERT(DATE, GETDATE()))\n    ))\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OnPrem_Fact_Table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Fact Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup-OnPrem Fact Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup-OnPrem Fact Tables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Fact Tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat('SELECT * FROM ', item().schemaName, '.', item().TableName, ' WHERE CONVERT(DATE, TransDate) <= DATEADD(day, -1, CONVERT(DATE, GETDATE()))')}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OnPrem_Fact_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Fact_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnPrem_Fact_Table')]",
				"[concat(variables('factoryId'), '/datasets/Fact_Dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load Dimensional Data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DL_to_EDW",
							"type": "PipelineReference"
						},
						"parameters": {
							"folder": "[parameters('Load Dimensional Data_properties_DL_to_EDW_parameters_folder')]",
							"fileName": "[parameters('Load Dimensional Data_properties_DL_to_EDW_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/dimension/blobs/live",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Load Dimensional Data_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DL_to_EDW')]"
			]
		}
	]
}